{"version":3,"file":"component---src-pages-sheet-index-tsx-ab4bcd17fc044b192334.js","mappings":"qLAQMA,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAHE,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,kCAIrBC,EAAWH,EAAAA,GAAAA,GAAHI,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,2BAIRC,EAAgBL,EAAAA,GAAAA,GAAHM,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,wIAQbC,GAAoBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAHS,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,6FA2EvB,UA5CkB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KACjBC,QAAQC,IAAI,qBAAsBF,GAClC,IAAQG,GAAUH,EAAKI,QAAU,CAAC,GAA1BD,MAER,OAEIE,EAAAA,cAAChB,EAAD,MACMc,GAAS,IAAIG,OAAS,EACpBD,EAAAA,cAACZ,EAAD,KACKU,EAAMI,KAAI,SAACC,GAAD,OACPH,EAAAA,cAACV,EAAD,CAAec,IAAKD,EAAKE,MAKrBL,EAAAA,cAACR,EAAD,CAAmBc,GAAE,UAAYH,EAAKE,OAChCF,EAAKI,aAAe,CAAC,GAAGC,OAASL,EAAKE,MAPnD,KAYLL,EAAAA,cAACS,EAAAA,EAAD,CAAYC,QAAQ,MAApB,kCArBhB,C","sources":["webpack://waitwut/./src/pages/sheet/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\nimport styled from 'styled-components';\nimport {\n    Container,\n    Typography\n} from '@mui/material';\n\nconst SheetContentContainer = styled(Container)`\n    text-align: center;\n`;\n\nconst StyledUl = styled.ul`\n    width: 100%;\n`;\n\nconst SheetLineItem = styled.li`\n    /* display: inline-block; */\n    list-style: none;\n    /* max-width: 50%; */\n    text-align: center;\n    width: 100%;\n`;\n\nconst SheetLineItemLink = styled(Link)`\n    text-decoration: none;\n\n    &:hover {\n        text-decoration: none;\n    }\n`;\n\ninterface NodeFrontmatter {\n    date?: Date;\n    title: string;\n}\n\ninterface NodeFromQuery {\n    name: string;\n    slug: string;\n    frontmatter: NodeFrontmatter;\n}\n\ninterface MdxNodes {\n    nodes: NodeFromQuery[];\n}\n\ninterface SheetPageData {\n    allMdx: MdxNodes;\n}\n\ninterface SheetPageProps {\n    data: SheetPageData;\n}\n\nconst SheetPage = ({ data }: SheetPageProps) => {\n    console.log('SheetPage - data: ', data)\n    const { nodes } = data.allMdx || {}\n\n    return (\n        // <SheetContentContainer container spacing={12}>\n        <SheetContentContainer>\n            {(nodes || []).length > 0 ? (\n                <StyledUl>\n                    {nodes.map((node: NodeFromQuery): React.ReactElement => (\n                        <SheetLineItem key={node.slug}>\n                            {/*\n                                TODO: add thumbnails!\n                                maybe using devicon? https://devicon.dev/\n                            */}\n                            <SheetLineItemLink to={`/sheet/${node.slug}`}>\n                                {(node.frontmatter || {}).title || node.slug}\n                            </SheetLineItemLink>\n                        </SheetLineItem>\n                    ))}\n                </StyledUl>) : (\n                <Typography variant=\"h2\">\n                    {`Some day, I'll have content ðŸ™‚`}\n                </Typography>\n            )}\n        </SheetContentContainer>\n    );\n};\n\nexport const query = graphql`\n    query {\n        allMdx(sort: {fields: frontmatter___date, order: DESC}) {\n            nodes {\n                frontmatter {\n                    date(formatString: \"MMMM D, YYYY\")\n                    title\n                }\n                id\n                slug\n            }\n        }\n    }\n`;\n\nexport default SheetPage;\n"],"names":["SheetContentContainer","styled","Container","_templateObject","StyledUl","_templateObject2","SheetLineItem","_templateObject3","SheetLineItemLink","Link","_templateObject4","data","console","log","nodes","allMdx","React","length","map","node","key","slug","to","frontmatter","title","Typography","variant"],"sourceRoot":""}